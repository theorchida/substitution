#include<stdio.h>
#include<cs50.h>
#include<ctype.h>
#include<string.h>

int check(int, string);

int main(int argc, string argv[])
{
    //validating key
    if (!check(argc, argv[1]))
    {
        //taking ip
        string plain = get_string("plaintext: ");
        printf("ciphertext: ");

        //encryption
        for (int i = 0; plain[i] != '\0'; i++)
        {
            //if alphabet
            if ((plain[i] >= 65 && plain[i] <= 90) || (plain[i] >= 97 && plain[i] <= 122))           //isalpha?
            {
                //if uppercase
                if (isupper(plain[i]))
                {
                    //replace by corresponding letter and change case to upper
                    plain[i] = argv[1][(int)plain[i] - 65];
                    printf("%c", toupper(plain[i]));
                }

                //if lowercase
                else
                {
                    //replace by corresponding letter and change case to lower
                    plain[i] = argv[1][(int)plain[i] - 97];
                    printf("%c", tolower(plain[i]));
                }
            }

            //if not alphabet
            else
            {
                printf("%c", plain[i]);
            }
        }
        printf("\n");
        return 0;
    }
    else
    {
        return 1;
    }
}

int check(int argc, string key)
{
    int flag = 0;
    //nos of arguments
    if (argc == 2)
    {
        //length of key
        if (strlen(key) != 26)
        {
            printf("Key must contain 26 characters.\n");
            return 1;
        }

        //repetion of characters
        else
        {

            int arr[26] = {0};
            for (int i = 0; i < 26; i++)
            {
                //converting so that letters correspond
                key[i] = toupper(key[i]);
                arr[(int)key[i] - 65]++;
            }

            for (int i = 0; i < 26; i++)
            {
                //1 means each letter occurs once
                if (arr[i] != 1)
                {
                    flag++;
                }
            }
            if (flag != 0)
            {
                //invalid
                printf("Usage: ./substitution key\n");
                return 1;
            }
            else
            {
                //go to main
                printf("success ");
                return 0;
            }
        }
    }

    else
    {
        //wrong format
        printf("Usage: ./substitution key\n");
        return 1;
    }
    return 0;
}
